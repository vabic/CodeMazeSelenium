version: v1.0
name: Initial Pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
blocks:
  - name: Publish
    task:
      jobs:
        - name: Publish project
          commands:
            - dotnet publish -c Release -o output EmployeesApp/EmployeesApp.sln
            - cache store dotnet-cache ./output
      prologue:
        commands:
          - checkout
          - sudo snap install dotnet-sdk --classic
          - sudo snap install dotnet-runtime-31
          - sudo snap alias dotnet-sdk.dotnet dotnet
    dependencies: []
  - name: Run Tests
    dependencies:
      - Publish
    task:
      jobs:
        - name: Unit Test
          commands:
            - dotnet vstest EmployeesApp.Tests.dll
        - name: Integration test
          commands:
            - dotnet vstest EmployeesApp.IntegrationTests.dll
      prologue:
        commands:
          - checkout
          - mkdir output
          - cd output
          - cache restore dotnet-cache
          - sudo snap install dotnet-sdk --classic
          - sudo snap install dotnet-runtime-31
          - sudo snap alias dotnet-sdk.dotnet dotnet
  - name: UI Tests
    dependencies:
      - Publish
    task:
      jobs:
        - name: Run up docker and Test
          commands:
            - docker-compose -f ~/$SEMAPHORE_PROJECT_NAME/EmployeesApp/EmployeesApp/docker-compose.yml run --rm start_dependencies
            - docker-compose -f ~/$SEMAPHORE_PROJECT_NAME/EmployeesApp/EmployeesApp/docker-compose.yml up -d
            - docker-compose ps
            - dotnet vstest EmployeesApp.AutomatedUITests.dll
      prologue:
        commands:
          - checkout
          - mkdir output
          - cd output
          - cache restore dotnet-cache
          - sudo snap install dotnet-sdk --classic
          - sudo snap install dotnet-runtime-31
          - sudo snap alias dotnet-sdk.dotnet dotnet
      env_vars: []
  - name: 'Block #4'
    dependencies:
      - Run Tests
      - UI Tests
    task:
      prologue:
        commands:
          - mkdir output
          - cd output
          - cache restore dotnet-cache
          - cd ../
      jobs:
        - name: Artifact
          commands:
            - 'tar -zcvf output-${SEMAPHORE_GIT_SHA::5} ./output'
            - artifact push project output.tar.gz
promotions:
  - name: Deploy With Tag
    pipeline_file: pipeline_2.yml
    auto_promote:
      when: (branch =~ '.*' OR tag =~ '.*') AND result = 'passed'
